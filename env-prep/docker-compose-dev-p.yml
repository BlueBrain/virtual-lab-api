version: "3.9"

volumes:
  vlm_data: {}
  delta_data: {}

networks:
  ls:
    ipam:
      config:
        # Specify the subnet range for IP address allocation
        - subnet: 10.0.2.0/24

services:
  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command:
      - start-dev
      - --http-port=9090
      - --hostname-admin=localhost
      - --hostname=localhost
      - --hostname-port=9090
      - --hostname-strict-backchannel=true
      - --import-realm
    volumes:
      - ./realm-export-dev-p.json:/opt/keycloak/data/import/realm-import.json
    network_mode: host

  virtual-lab-db:
    image: postgres:latest
    container_name: vlm-db
    environment:
      POSTGRES_USER: vlm
      POSTGRES_PASSWORD: vlm
      PGDATA: vlm_data
      POSTGRES_DB: vlm
    ports:
      - 15432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U vlm"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    volumes:
      - vlm_data:/var/lib/postgresql/data
    networks:
      - ls

  stripe-cli:
    image: stripe/stripe-cli
    container_name: stripe
    env_file: .env.local
    environment:
      STRIPE_CLI_TELEMETRY_OPTOUT: 1
      STRIPE_API_KEY: ${STRIPE_API_KEY}
      STRIPE_DEVICE_NAME: ${STRIPE_DEVICE_NAME}
    volumes:
      - ./stripe-data:/stripe-data
    entrypoint:
      - '/bin/sh'
      - '-c'
      - |
        echo STRIPE_WEBHOOK_SECRET=$(stripe listen --print-secret) > /stripe-data/.env.local &&
        stripe listen --forward-to localhost:8000/payments/webhook
    network_mode: host

  mailpit:
    image: axllent/mailpit
    container_name: test-mail-server
    restart: always
    volumes:
      - ./email-data:/email-data
    ports:
      - 8025:8025 # UI to see sent emails
      - 1025:1025 # test smtp server
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATA_FILE: /email-data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1

  delta:
    depends_on:
      keycloak:
        condition: service_started
      elasticsearch:
        condition: service_healthy
      blazegraph:
        condition: service_started
      postgres:
        condition: service_started
    environment:
      DELTA_PLUGINS: "/opt/docker/plugins/"
      DELTA_EXTERNAL_CONF: "/config/delta-postgres.conf"
      KAMON_ENABLED: "false"
    image: bluebrain/nexus-delta:latest
    container_name: delta
    entrypoint:
      - '/bin/bash'
      - '-c'
      - |
        ln -sf /opt/docker/plugins/disabled/project-deletion.jar /opt/docker/plugins/project-deletion.jar &&
        /opt/docker/bin/delta-app -Xmx4G
    volumes:
      - ./config:/config
      - /tmp:/default-volume
    # dns:
      # Set the DNS server to be the LocalStack container, for host resolution
      # - 10.0.2.20
    extra_hosts:
      elasticsearch: "10.0.2.32"
      blazegraph: "10.0.2.33"
      postgres: "10.0.2.34"
    network_mode: host

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    container_name: elasticsearch
    environment:
      ES_JAVA_OPTS: "-Xmx2G"
      discovery.type: "single-node"
      bootstrap.memory_lock: "true"
      xpack.security.enabled: "true"
      ingest.geoip.downloader.enabled: "false"
      ELASTIC_PASSWORD: "password"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://elastic:password@localhost:9200/" ]
      interval: 1s
      timeout: 2s
      retries: 60
    ports:
      - 9200:9200
    deploy:
      resources:
        limits:
          memory: 4G
    networks:
      ls:
        ipv4_address: 10.0.2.32


  blazegraph:
    image: bluebrain/blazegraph-nexus:2.1.6-RC
    container_name: blazegraph
    environment:
      JAVA_OPTS: "-DjettyXml=/config/jetty.xml -Djava.awt.headless=true -XX:MaxDirectMemorySize=300m -Xms4g -Xmx4g -XX:+UseG1GC"
    ports:
      - 9999:9999
    volumes:
      - ./config:/config
    networks:
      ls:
        ipv4_address: 10.0.2.33

  postgres:
    image: library/postgres:15.6
    container_name: postgres
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    ports:
      - 5432:5432
    volumes:
      - delta_data:/var/lib/postgresql/data
    networks:
      ls:
        ipv4_address: 10.0.2.34
